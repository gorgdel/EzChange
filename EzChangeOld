#!/bin/bash


##############################################
# This script is for both old/new            #
##############################################

# Check for Root 
user=$(whoami)
if [[ "$user" != "root" ]];
then
	echo "Error: Must be run as root or run with SUDO"
	exit
fi


# Change ulimit for session
ulimit -n 524000 


# Install YAY 
if [[ ! -d /opt/yay ]];
then
    pacman -S --needed git base-devel
    cd /opt/
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
fi


# Create Packages File
pacman -Qqe > /tmp/packages.txt


# Check for Arch 
if (! uname -r | grep -q 'arch')
then
    exit
fi 


function confirm() {
    if (whiptail --title "$1" --yesno "$2" 8 78); then
            $3
      else
            $4
      fi
}

function selectOption() {
    clear
    echo "Select an Option:"
    echo "  (1) Transfer files from this machine to another machine"
    echo "  (2) Install/move files on this machine"
    echo "  (3) Exit"
    read -p "Select an option [1]: " option
    until [[ "$option" || "$option" =~ ^[1-3]$ ]]; do
        echo "$option: invalid selection."
        read -p "Select an option [1]: " option
    done

    if [[ $option == 1 ]]; then
            #TODO:Start Function (transfer)
            echo "1"
        elif [[ $option == 2 ]]; then
            #TODO:Start Function (install)
            echo "2"
        else 
            exit
        fi
}

# Enter username
pickCurrentUser(){
    clear
    read -p "Enter username of both machines: " currentUser
    confirm "Username" "Is $currentUser correct?" newIPAddress pickCurrentUser
}


# Get current IP address
newIPAddress(){
    clear
    read -p "Your New Machines IPV4? : " ipAddress
    confirm "IP Address" "Is $ipAddress correct?" start newIPAddress
}

start(){
    confirm "Starting Default Copy" "Confirm to copy $currentUser profile to $ipAddress" default exit
    clear
}

 
##############################################
#                  Copying!                  #
##############################################


# SCP ZSH, BASHRC, VIMRC to Default user
home(){
    scp "/home/$currentUser/.zshrc" "/home/$currentUser/.bashrc" "/home/$currentUser/.vimrc" $currentUser@$ipAddress:"/home/$currentUser/"
}


# SCP ZSH theme 
zshTheme(){
    scp "/home/$currentUser/.oh-my-zsh/themes/custom.zsh-theme" $currentUser@$ipAddress:"/home/$currentUser/.oh-my-zsh/themes/"
}


# SCP Remmina
remmina(){
    scp /home/$currentUser/.local/share/remmina/* $currentUser@$ipAddress:"/home/$currentUser/.local/share/remmina/"
}

# SCP .fonts
fonts(){
    scp /home/$currentUser/.fonts/* $currentUser@ipAddress:"/home/$currentUser/.fonts/"
}




# SCP .config
# TODO:


# Create Pacman Packages List and SCP
pacman(){
    pacman -Qqe > packages.txt
    scp "packages.txt" $currentUser@$ipAddress:"/home/$currentUser/Desktop/"
}


##############################################
#                Copying!(ROOT)              #
##############################################


# SCP Mint Icons 
icons(){
    scp -r "/usr/share/icons/" root@$ipAddress:"/usr/share/icons/" 
}


# SCP Mint themes
themes(){
    scp -r "/usr/share/themes/" root@$ipAddress:"/usr/share/themes/" 
}


# SCP lightdm config
lightdm(){
    scp "/etc/lightdm/lightdm.conf" $root@$ipAddress:"/etc/lightdm/"
}


# SCP Root ZSH Config 
zshThemeRoot(){
    scp "/root/.oh-my-zsh/themes/custom.zsh-theme" $root@$ipAddress:"/root/.oh-my-zsh/themes/"
}



###################################################
#                Option 2: New Machine            #
###################################################


# Install packages through YAY 
packages(){
yay -S --needed --noconfirm - < "/home/$currentUser/Desktop/packages.txt"
}













default(){
    
    home
    clear && echo "ZSHRC, VIMRC, BASHRC transferred" && sleep 0.5

    zshTheme
    clear && echo "Oh My Zsh theme transferred" && sleep 0.5

    remmina
    clear && echo "Remmina profiles transferred" && sleep 0.5

    pacman
    clear && echo "Packages list created & transferred" && sleep 0.5

}

selectOption